function Person(n,t){"use strict";this._age=t;this.age=t}function Developer(n,t,i){Person.call(this,n,t);this.language=i}Person.prototype.speak=function(){console.log("Hi my name is "+this.name+" and I am "+this.age+" years old")};Person.prototype.work=function(){console.log(this.name+" is working...")};Object.defineProperty(Person.prototype,"age",{get:function(){return this._age},set:function(n){if(n>=0)this._age=n;else throw new Error("xoxoxocan't set age to be less than zero");}});Developer.prototype=Object.create(Person.prototype);Developer.prototype.code=function(){console.log(this.name+" is coding with "+this.language)};Developer.prototype=Object.freeze(Developer.prototype);Developer.prototype.code=function(){console.log("new code")};var brock=new Developer("Brock",21,"C#");brock.speak();console.log("trying to override code!");brock.code=function(){console.log("new code")};brock.code();console.log(brock instanceof Object);console.log(brock instanceof Person);console.log(brock instanceof Developer);console.log(brock instanceof Date);
//# sourceMappingURL=MyBundle.min.js.map
